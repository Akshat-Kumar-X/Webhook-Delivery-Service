# render.yaml  ‚Äì  free‚Äëtier blueprint
services:
  # üåê FastAPI + Celery (worker & beat) combined
  - type: web
    name: api
    env: docker
    plan: free
    dockerContext: .
    dockerfilePath: ./Dockerfile          # this image runs start_all.sh
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: "8000"

      # --- database ----------------------------------------------------------
      - key: DATABASE_URL
        fromDatabase:
          name: webhook-db
          property: connectionString

      # --- redis broker / backend -------------------------------------------
      - key: REDIS_URL              # Celery broker  (db 0)
        fromService:
          name: webhook-redis
          type: redis
          property: connectionString

      - key: REDIS_BACKEND_URL      # Celery result backend (db 1)
        fromService:
          name: webhook-redis
          type: redis
          property: connectionString

  # ‚öôÔ∏è  Alembic migrations ‚Äî runs on every deploy and exits cleanly
  - type: worker
    name: migrate
    env: docker
    plan: free
    dockerContext: .
    dockerfilePath: ./Dockerfile.migrate  # image whose CMD is `alembic upgrade head`
    runCommand: ""        # tell Render to use image CMD
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase: { name: webhook-db, property: connectionString }
      - key: REDIS_URL
        fromService:  { name: webhook-redis, type: redis, property: connectionString }
      - key: REDIS_BACKEND_URL
        fromService:  { name: webhook-redis, type: redis, property: connectionString }

# üî¥ Redis add‚Äëon --------------------------------------------------------------
  - type: redis
    name: webhook-redis
    plan: free
    ipAllowList: []        # default: only Render internal traffic

# üü¶ PostgreSQL add‚Äëon ---------------------------------------------------------
databases:
  - name: webhook-db
    plan: free
    postgresMajorVersion: "16"
